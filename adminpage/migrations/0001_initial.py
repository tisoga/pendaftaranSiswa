# Generated by Django 2.2.4 on 2019-12-26 04:42

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='tahun_ajaran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tahun', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tabel_tahun_ajaran',
            },
        ),
        migrations.CreateModel(
            name='tabel_siswa',
            fields=[
                ('nis', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('nama', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('foto', models.CharField(max_length=255)),
                ('jenis_kelamin', models.CharField(max_length=255)),
                ('alamat', models.TextField()),
                ('tempat_lahir', models.CharField(max_length=255)),
                ('tanggal_lahir', models.DateField()),
                ('nilai_mtk', models.IntegerField(blank=True, null=True)),
                ('nilai_inggris', models.IntegerField(blank=True, null=True)),
                ('nilai_indonesia', models.IntegerField(blank=True, null=True)),
                ('kelas', models.CharField(blank=True, max_length=10, null=True)),
                ('tahun_ajaran', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='adminpage.tahun_ajaran')),
            ],
            options={
                'db_table': 'tabel_siswa',
            },
        ),
        migrations.CreateModel(
            name='tabel_admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'tabel_admin',
            },
        ),
    ]
